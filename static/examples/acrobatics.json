{
  "formula": "F(up & position_p1)",
  "domain": ";; Inspired by: Rune Jensen & Manuela Veloso 'beam-walk'\n;; Author: Miquel Ramirez, July 2014\n\n(define (domain acrobatics)\n\t(:requirements :typing :strips :non-deterministic)\n\t(:types location)\n\t(:predicates\n\t\t(up)\n\t\t(position ?p - location)\n\t\t(next-fwd ?p1 ?p2 - location)\n\t\t(next-bwd ?p1 ?p2 - location)\n\t\t(ladder-at ?p - location)\n\t\t(broken-leg)\n\t)\n\n\t;; Action to move while being on the beam\n\t(:action walk-on-beam\n\t\t:parameters ( ?from - location ?to - location )\n\t\t:precondition (and (not (broken-leg)) (up) (position ?from) (next-fwd ?from ?to))\n\t\t:effect (oneof\n\t\t\t\t(and (position ?to) (not (position ?from)))\n\t\t\t\t(and (not (up)) (position ?to) (not (position ?from)))\n\t\t\t)\n\t)\n\n\t(:action walk-left\n\t\t:parameters (?from - location ?to - location)\n\t\t:precondition (and (not (broken-leg)) (not (up)) (position ?from) (next-bwd ?from ?to))\n\t\t:effect (and (position ?to) (not (position ?from)))\n\t)\n\n\t(:action walk-right\n\t\t:parameters (?from - location ?to - location)\n\t\t:precondition (and (not (broken-leg)) (not (up)) (position ?from) (next-fwd ?from ?to))\n\t\t:effect (and (position ?to) (not (position ?from)))\t\n\t)\n\n\t(:action climb\n\t\t:parameters (?p - location)\n\t\t:precondition (and (not (broken-leg)) (not (up)) (position ?p) (ladder-at ?p))\n\t\t:effect (and (up))\n\t)\n\n\t(:action climb-down\n\t\t:parameters () \n\t\t:precondition (and (not (broken-leg)) (up))\n\t\t:effect (and (not (up)))\n\t)\n\n\t;; effects mean:\n\t;; 1) agent falls from the beam and breaks its leg\n\t;; 2) agent falls from the beam, breaks its leg and falls in the middle\n\t;; 3) agent falls from the beam, does not break its leg and falls in the middle\n\t;; 4) agent falls from the beam, does not break its leg and falls at destination position\n\t;; 5) agent falls from the beam, breaks its leg and fall at destination position\n\t;; 6) agent falls on the beam at the destination position\n\t\n\t(:action jump-over\n\t\t:parameters ( ?from - location ?middle - location ?to - location )\n\t\t:precondition (and (not (broken-leg)) (up) (position ?from) (next-fwd ?from ?middle) (next-fwd ?middle ?to))\n\t\t:effect (oneof\n\t\t\t\t(and (not (up)) (broken-leg)) \n\t\t\t\t(and (not (up)) (broken-leg) (position ?middle) (not (position ?from)))\n\t\t\t\t(and (not (up)) (position ?middle) (not (position ?from)))\n\t\t\t\t(and (not (up)) (broken-leg) (position ?to) (not (position ?from)))\n\t\t\t\t(and (not (up)) (position ?to) (not (position ?from)))\n\t\t\t\t(and (position ?to) (not (position ?from)))\n\t\t\t)\n\t)\n)\n",
  "problem": "(define (problem beam-walk-2)\n(:domain acrobatics)\n(:objects\np0 p1 - location\n)\n(:init\n(next-fwd p0 p1)\n(next-bwd p1 p0)\n(ladder-at p0)\n(position p0)\n)\n\n(:goal\n(and (up) (position p1) )\n)\n\n)\n"
}